

-------Install multiple eth ports


http://getcloudify.org/2014/11/03/openstack-neutron-openstack-nova-network-architecture-automation.html
TL;DR :
-----
Activate eth1
echo $'auto eth1\niface eth1 inet dhcp' | sudo tee /etc/network/interfaces.d/eth1.cfg > /dev/null
sudo ifup eth1


----- Install VirtualBox and VAgrant


sudo echo 'deb http://download.virtualbox.org/virtualbox/debian trusty contrib' >> /etc/apt/sources.list
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo apt-get update
sudo apt-get --assume-yes install virtualbox-4.3
---
wget https://releases.hashicorp.com/vagrant/1.8.5/vagrant_1.8.5_x86_64.deb
sudo dpkg -i vagrant_1.8.5_x86_64.deb
mkdir vagrant
cd vagrant
vagrant init ubuntu/trusty32






http://blog.scottlowe.org/2012/08/17/installing-kvm-and-open-vswitch-on-ubuntu/
http://networkstatic.net/openflow-openvswitch-lab/

----- Install OVS & config

    #sudo apt-get update && sudo apt-get dist-upgrade
    sudo apt-get update
    sudo apt-get --assume-yes install openvswitch-datapath-source bridge-utils
    sudo module-assistant auto-install openvswitch-datapath
    sudo apt-get  --assume-yes install openvswitch-common
    sudo apt-get --assume-yes install openvswitch-switch
    sudo ovs-vsctl add-br br0
    sudo ifconfig br0 up
#You stop here
    sudo ovs-vsctl add-port br0 eth1
    sudo ovs-vsctl show

    sudo ifconfig eth1 0
    sudo ifconfig br0 192.168.1.20x netmask 255.255.255.0
    ifconfig
    route -n
    sudo ip tuntap add mode tap vport1
    sudo ifconfig vport1 up
    sudo ovs-vsctl add-port br0 vport1
    sudo ovs-vsctl show
    route -n
    ----- https://www.youtube.com/watch?v=rYW7kQRyUvA
    ------------- OVS solved ----------------------

    Here are the steps I use. It is important to use the IP and MAC on the bridge that Neutron allocated for the port, as it applies antispoofing filters.

    ip address del 172.16.34.5/24 dev eth1
    ovs-vsctl add-br br-eth1
    ovs-vsctl add-port br-eth1 eth1
    cat /sys/class/net/eth0/address
    fa:16:3e:ba:ec:b8
    ip link set dev br-eth1 address fa:16:3e:ba:ec:b8
    ip link set dev eth1 up
    ip link set dev br-eth1 up
    ip address add 172.16.34.5/24 dev br-eth1

    ------------------------------------
   script:

   sudo bash -c 'echo -e  "#!/bin/bash\n\nsudo ovs-vsctl add-br br1\nsudo ovs-vsctl add-port br1 eth0\nsudo ifconfig eth0 0\nsudo ip link set dev br1 address "$(cat /sys/class/net/eth0/address)"\nsudo dhclient br1\n" > script.sh'
   sudo chmod +x script.sh
   touch error.log
   sudo ./script.sh 2>&1 | tee -a error.log



------------------------ The file --------------------

#!/bin/bash

sudo ovs-vsctl add-br br1
sudo ovs-vsctl add-port br1 eth0
sudo ip link set dev br1 address fa:16:3e:8e:66:ba
sudo ifconfig eth0 0
sudo dhclient br1



----------------------------------------------------


    ------------------------------
virsh -c qemu:///system list
http://blog.scottlowe.org/2012/08/21/working-with-kvm-guests/

https://en.wikibooks.org/wiki/QEMU
guru mediation http://www.fixedbyvonnie.com/2014/09/heck-virtualbox-guru-meditation-error/#.V6s6yp6Ju00

killall -9 VBoxHeadless && vagrant destroy

https://help.ubuntu.com/community/KVM/Virsh

https://smdaudhilbe.wordpress.com/2013/04/11/how-to-install-ubuntu-inside-qemu-emulator-and-make-a-virtual-machine/
https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Virtualization_Administration_Guide/section-libvirt-dom-xml-example.html

And the solution is :  gistfile1.txt


config.vm.provider :virtualbox do |vb|
              vb.customize ["modifyvm", :id, "--hwvirtex", "off"]
              vb.name = "ellis"
              vb.memory = 2024
              vb.cpus = 1
            # vb.gui = true
end
#  config.vm.network "public_network", bridge: "vport1"

http://www.relaxdiego.com/2014/09/ovs-lab.html






---- How to connect OVS to OpenDaylight


mkdir odl
cd odl
wget https://nexus.opendaylight.org/content/repositories/public/org/opendaylight/integration/distribution-karaf/0.4.3-Beryllium-SR3/distribution-karaf-0.4.3-Beryllium-SR3.tar.gz
sudo apt-get update
sudo apt-get --assume-yes install default-jre
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
./bin/karaf

feature:install odl-l2switch-switch-ui odl-dlux-all odl-of-config-rest odl-openflowplugin-flow-services-ui odl-bgpcep-pcep odl-sfc-sb-rest
On the VM where OVS is installed

sudo ovs-vsctl set-controller br1 tcp:157.159.232.200:6633


------


For tomorrow http://networkstatic.net/open-vswitch-on-virtualbox/




Run without sudo



sudo usermod -aG  docker ubuntu
sudo usermod -aG <source_program> ubuntu


pip install -r requirements.txt

docker exec -it <docker> bash

Fullname = heskojr

Private Identity:

6505550225@example.com
Password: vtyK7PCSM
